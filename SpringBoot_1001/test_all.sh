#!/bin/bash

echo "üöÄ STARTING SPRING BOOT APPLICATION TESTING PROCESS..."
echo "======================================================"

# B∆∞·ªõc 1: Kh·ªüi ƒë·ªông ·ª©ng d·ª•ng
echo "üì± Step 1: Starting Spring Boot Application..."
./mvnw spring-boot:run &
APP_PID=$!
echo "App started with PID: $APP_PID"

# ƒê·ª£i app kh·ªüi ƒë·ªông
echo "‚è≥ Waiting for application to start..."
sleep 30

# B∆∞·ªõc 2: Ki·ªÉm tra health
echo "üîç Step 2: Testing Health Endpoint..."
HEALTH_RESPONSE=$(curl -s http://localhost:8080/api/auth/public/health)
echo "Health Response: $HEALTH_RESPONSE"

if [[ "$HEALTH_RESPONSE" == *"Auth service is running"* ]]; then
    echo "‚úÖ Application is running successfully!"
else
    echo "‚ùå Application failed to start properly"
    kill $APP_PID 2>/dev/null
    exit 1
fi

# B∆∞·ªõc 3: T·∫°o hash password
echo "üîë Step 3: Generating Password Hash..."
HASH_RESPONSE=$(curl -s "http://localhost:8080/api/auth/public/generate-password?password=password123")
echo "Password Hash Response: $HASH_RESPONSE"

# B∆∞·ªõc 4: ƒêƒÉng k√Ω user m·ªõi
echo "üë§ Step 4: Registering New User..."
REGISTER_RESPONSE=$(curl -s -X POST http://localhost:8080/api/auth/register \
  -H "Content-Type: application/json" \
  -d '{
    "username": "testuser2025",
    "email": "testuser2025@example.com",
    "password": "password123"
  }')
echo "Register Response: $REGISTER_RESPONSE"

# B∆∞·ªõc 5: Login v·ªõi user v·ª´a ƒëƒÉng k√Ω
echo "üîê Step 5: Testing Login..."
LOGIN_RESPONSE=$(curl -s -X POST http://localhost:8080/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{
    "usernameOrEmail": "testuser2025", 
    "password": "password123"
  }')
echo "Login Response: $LOGIN_RESPONSE"

# Ki·ªÉm tra k·∫øt qu·∫£ login
if [[ "$LOGIN_RESPONSE" == *"accessToken"* ]]; then
    echo "üéâ SUCCESS! Login worked perfectly!"
    echo "‚úÖ User registration and authentication flow is working!"
else
    echo "‚ùå Login failed. Response: $LOGIN_RESPONSE"
fi

# B∆∞·ªõc 6: Test v·ªõi user c√≥ s·∫µn trong database
echo "üîÑ Step 6: Testing Login with Existing Users..."

# Test v·ªõi admin
ADMIN_LOGIN=$(curl -s -X POST http://localhost:8080/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{
    "usernameOrEmail": "admin",
    "password": "admin123"
  }')
echo "Admin Login: $ADMIN_LOGIN"

# Test v·ªõi test user  
TEST_LOGIN=$(curl -s -X POST http://localhost:8080/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{
    "usernameOrEmail": "test",
    "password": "test123"
  }')
echo "Test User Login: $TEST_LOGIN"

# Test v·ªõi newuser123
NEWUSER_LOGIN=$(curl -s -X POST http://localhost:8080/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{
    "usernameOrEmail": "newuser123", 
    "password": "password123"
  }')
echo "NewUser123 Login: $NEWUSER_LOGIN"

echo "======================================================"
echo "üèÅ TESTING COMPLETED!"
echo "The application will continue running for further manual testing..."
echo "To stop the application, run: kill $APP_PID"
echo "======================================================"